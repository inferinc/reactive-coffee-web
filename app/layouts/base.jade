!!! 5
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='chrome=1')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    // build:css({.tmp,app}) styles/main.css
    link(rel='stylesheet', type='text/css', href='styles/stylesheet.css', media='screen')
    link(rel='stylesheet', type='text/css', href='styles/pygment_trac.css', media='screen')
    link(rel='stylesheet', type='text/css', href='styles/print.css', media='print')
    // endbuild
    title
      block title
  body
    header
      .inner
        h1 reactive.coffee
        h2
          | A lightweight CoffeeScript library/DSL for reactive programming and for declaratively building dynamic web UIs
        a.button(href='https://github.com/yang/reactive-coffee')
          small View project on
          | GitHub
    #content-wrapper
      .inner.clearfix
        section#main-content
          block content

        aside#sidebar
          a.button(href='https://github.com/yang/reactive-coffee/zipball/master')
            small Download
            |  .zip file
          a.button(href='https://github.com/yang/reactive-coffee/tarball/master')
            small Download
            |  .tar.gz file
          p.repo-owner
            a(href='https://github.com/yang/reactive-coffee') reactive.coffee
            |  is maintained by 
            a(href='https://github.com/yang') yang
            | .
          p
            | Based on Architect theme by 
            a(href='https://twitter.com/jasonlong') Jason Long
            | .
    // if lt IE 9
      script(src='//html5shiv.googlecode.com/svn/trunk/html5.js')
    script(type='text/javascript')
      var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
      document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    script(type='text/javascript')
      try {
      var pageTracker = _gat._getTracker("UA-41900480-1");
      pageTracker._trackPageview();
      } catch(err) {}
